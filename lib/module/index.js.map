{"version":3,"sources":["index.tsx"],"names":["NativeModules","Platform","scanSKRNMLKitPose","SKRNMLKitVisionCameraPluginResultPoseItem","LINKING_ERROR","select","ios","default","MLKitPoseDetectionLandmarkKeys","SKRNMlkitPoseDetection","Proxy","get","Error","initializeVisionCameraFrameProcessor","opts","initializeVisionCameraFrameProcessorWithOptions","MLKitPoseDetector","accurate","detectionMode","global","SKRNMLKitPoseDetectionNewPoseDetector"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,cAAxC;AAEA,SAASC,iBAAT,EAA4BC,yCAA5B,QAA6E,kBAA7E;AACA,MAAMC,aAAa,GAChB,4FAAD,GACAH,QAAQ,CAACI,MAAT,CAAgB;AAAEC,EAAAA,GAAG,EAAE,gCAAP;AAAyCC,EAAAA,OAAO,EAAE;AAAlD,CAAhB,CADA,GAEA,sDAFA,GAGA,6CAJF;AAMA,OAAO,MAAMC,8BAA8B,GAAG,CAAC,MAAD,EAAS,cAAT,EAAyB,SAAzB,EAAoC,cAApC,EAAoD,eAApD,EAAqE,UAArE,EAAiF,eAAjF,EAAkG,SAAlG,EAA6G,UAA7G,EAAyH,WAAzH,EAAsI,YAAtI,EAAoJ,cAApJ,EAAoK,eAApK,EAAqL,WAArL,EAAkM,YAAlM,EAAgN,WAAhN,EAA6N,YAA7N,EAA2O,iBAA3O,EAA8P,kBAA9P,EAAkR,iBAAlR,EAAqS,kBAArS,EAAyT,WAAzT,EAAsU,YAAtU,EAAoV,SAApV,EAA+V,UAA/V,EAA2W,UAA3W,EAAuX,WAAvX,EAAoY,WAApY,EAAiZ,YAAjZ,EAA+Z,UAA/Z,EAA2a,WAA3a,EAAwb,SAAxb,EAAmc,UAAnc,CAAvC;AAGP,MAAMC,sBAAsB,GAC1BT,aAAa,CAACS,sBAAd,GACIT,aAAa,CAACS,sBADlB,GAEI,IAAIC,KAAJ,CACA,EADA,EAEA;AACEC,EAAAA,GAAG,GAAG;AACJ,UAAM,IAAIC,KAAJ,CAAUR,aAAV,CAAN;AACD;;AAHH,CAFA,CAHN;AAYA,OAAO,eAAeS,oCAAf,CAAoDC,IAApD,EAGc;AACnB,SAAOL,sBAAsB,CAACM,+CAAvB,CAAuED,IAAI,IAAI,EAA/E,CAAP;AACD;AAqBD;AACA;AACA;AAEA,OAAO,SAASE,iBAAT,CAA2BC,QAA3B,EAA+CC,aAA/C,EAA2G;AAChH,SAAQC,MAAD,CAAgBC,qCAAhB,CAAsDH,QAAtD,EAAgEC,aAAhE,CAAP;AACD","sourcesContent":["import { NativeModules, Platform } from 'react-native';\nimport type { NativeFrameWrapper } from 'react-native-native-video';\nexport { scanSKRNMLKitPose, SKRNMLKitVisionCameraPluginResultPoseItem } from './FrameProcessor';\nconst LINKING_ERROR =\n  `The package 'react-native-mlkit-pose-detection' doesn't seem to be linked. Make sure: \\n\\n` +\n  Platform.select({ ios: \"- You have run 'pod install'\\n\", default: '' }) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo managed workflow\\n';\n\nexport const MLKitPoseDetectionLandmarkKeys = [\"Nose\", \"LeftEyeInner\", \"LeftEye\", \"LeftEyeOuter\", \"RightEyeInner\", \"RightEye\", \"RightEyeOuter\", \"LeftEar\", \"RightEar\", \"MouthLeft\", \"MouthRight\", \"LeftShoulder\", \"RightShoulder\", \"LeftElbow\", \"RightElbow\", \"LeftWrist\", \"RightWrist\", \"LeftPinkyFinger\", \"RightPinkyFinger\", \"LeftIndexFinger\", \"RightIndexFinger\", \"LeftThumb\", \"RightThumb\", \"LeftHip\", \"RightHip\", \"LeftKnee\", \"RightKnee\", \"LeftAnkle\", \"RightAnkle\", \"LeftHeel\", \"RightHeel\", \"LeftToe\", \"RightToe\"] as const;\nexport type MLKitPoseDetectionLandmarkKeyType = (typeof MLKitPoseDetectionLandmarkKeys)[number];\n\nconst SKRNMlkitPoseDetection =\n  NativeModules.SKRNMlkitPoseDetection\n    ? NativeModules.SKRNMlkitPoseDetection\n    : new Proxy(\n      {},\n      {\n        get() {\n          throw new Error(LINKING_ERROR);\n        },\n      }\n    );\n\nexport async function initializeVisionCameraFrameProcessor(opts?: {\n  accurate?: boolean,\n  detectionMode?: 'stream' | 'image'\n}): Promise<boolean> {\n  return SKRNMlkitPoseDetection.initializeVisionCameraFrameProcessorWithOptions(opts || {});\n}\n\nexport interface Position3D {\n  x: number; y: number; z: number;\n}\n\nexport interface SKRNMLKitPoseDetectionMLKPoseLandmark {\n  inFrameLikelihood: number;\n  position: Position3D;\n  type: MLKitPoseDetectionLandmarkKeyType\n}\n\nexport interface SKRNMLKitPoseDetectionMLKPose {\n  landmarks(): SKRNMLKitPoseDetectionMLKPoseLandmark[];\n  landmarkOfType(type: MLKitPoseDetectionLandmarkKeyType): SKRNMLKitPoseDetectionMLKPoseLandmark;\n}\n\nexport interface SKRNMLKitPoseDetector {\n  process(frame: NativeFrameWrapper): SKRNMLKitPoseDetectionMLKPose[];\n}\n\n// function multiply(a: number, b: number): Promise<number> {\n//   return MlkitPoseDetection.multiply(a, b);\n// }\n\nexport function MLKitPoseDetector(accurate?: boolean, detectionMode?: 'stream' | 'single'): SKRNMLKitPoseDetector {\n  return (global as any).SKRNMLKitPoseDetectionNewPoseDetector(accurate, detectionMode);\n}\n"]}